<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Panel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABHNCSVQICAgIfAhkiAAAAAFzUkdCAK7O
        HOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAButAAAbrQEh5FKVAAAAGXRFWHRTb2Z0d2FyZQB3d3cu
        aW5rc2NhcGUub3Jnm+48GgAABIhJREFUeF7tl01rX0UUhwcRwbWuXOpnUPBDdFkXUl26toiCNIWrRSkF
        oVlI68tGQRDf21Jc2o3d1ITakJb6VldCt5KUllrGGTmVEJ7c/M9kzv1fDueBZ5nJ7z6XTm5TEARBEARB
        EARBEARBEFiTfxgezT8Nq8XczRsf5vzn+QU9l/PmWT6n0fsXX7wkjzdv8vrwVL4yXKaHaHLtrZx/+RQi
        7+Gt73K+dprPavT+ucOXtldSlkecL3n97efL4L92P0Czaydy/vUzDk3e+jbnn9/jsxp9GH/2LyCvDa+U
        wfd2P0Cz6+/m/PsXHJr846ucr57ksxrdGX+2LyBvDo+VK+cDeoBmr54qQb/h0ORvn5cX9g6f1eju+LN8
        Ad3v+2q9QupVQqHJekXVq4rOapTiz+4FdL/vqxurJWr5gqHQ5M1Pys+VP9J0VqN7xa/Koy+f7vd99fqZ
        ElUR//pHfM4BHItflcdfHib3ffXGxxx5Lzff53MO4H7xq5JhOZjc9zP4xq8uEr8qKabH5L6fwTd+ddH4
        VckxLSb3/Qy+8aua+FVJMg1m9/0MvvGr2vhVSWOPyX1fncE3frUlflXy2GJy31dn8I1fbY1flUR2mNz3
        1Rl841cPEr8qmezIZ1M28ftDOumMDlJUjZLJDhrdRYo8Jp3RQYqqUTLZQaO7SJHHpDM6SFE1SiY7aHQX
        KfKYdEYHKapGyWQHje4iRR6TzuggRdUomeyg0V2kyGPSGR2kqBolkx00uosUeUw6o4MUVaNksoNGd5Ei
        j0lndJCiapRMdtDoLlLkMemMDlJUjZLJDhrdRYo8Jp3RQYqqUTLZQaNbfHAm5Y03Ur74cspfvtBm/dl6
        Rj2LfkeLFFWjZLKDRrdYw1HUFjde59/RIkXVKJnsoNEtXniJY7ZYz6Lf0SJF1SiZ7KDRLV44wjFbjBfQ
        YFxBjdDoFh/+ET5/gH8J9Wfjj7AzKapGyWQHjfYkRdUomeyg0Z6kqBolkx002pMUVaNksoNGe5KiapRM
        dtBoT1JUjZLJDhrtSYqqUTLZQaM9SVE1SiY7aLQnKapGyWQHjfYkRdUomeyg0Z6kqBolkx002pMUVaNk
        soNGe5KiapRMdtBoT1JUjZLJDhrtSYqqUTLZQaM9SVE1SiY7aLQnKapGyWQHjfYkRdUomeyg0Z6kqBol
        kx002pMUVaNksoNGe5KiapRMdtBoT1JUhfckkx002pMQdVEf3DmWDksmO2i0JyHsQm6tpNckkS002pMU
        dz+3jqdVyWMPjfYkBd7Hr/OQHpE89tBoT0LgMS/no+lxSTMNNNqTEBkt187Nv4f0pGSZDhrtSYoN3r67
        kp6RJNNCoz0JsXe7XT43n5Mc00OjPQnBd/rP9rF0SFIsBxrtSYj+v3dW0lHJsDxotCcpfLX8R+u0JFgu
        NNqTFL847bf+GDTakxD/x8m/9ceg0Z7cGf+/b/030xPy6POARntyxwu4fXdIT8tjzwca7UmJv7V9PD0r
        jzwvaLQnS/zlf+uPQaM9Wf6X+6o8ahAEQRAEQRAEQRAEQRB0JKV/AQxKhKPKOnqEAAAAAElFTkSuQmCC
</value>
  </data>
</root>